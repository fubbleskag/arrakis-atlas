
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // =================================================================
    // Helper Functions
    // =================================================================
    
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(mapData) {
      return isSignedIn() && request.auth.uid == mapData.ownerId;
    }
    
    function isEditor(mapData) {
      return isSignedIn() && request.auth.uid in mapData.editors;
    }
    
    function isOwnerOrEditor(mapData) {
      return isOwner(mapData) || isEditor(mapData);
    }
    
    function isValidNewMap() {
      let map = request.resource.data;
      return isSignedIn() &&
             map.ownerId == request.auth.uid &&
             map.name is string && map.name.size() > 0 && map.name.size() < 50 &&
             map.gridState is map &&
             map.createdAt == request.time &&
             map.updatedAt == request.time &&
             map.isPublicViewable == false &&
             map.publicViewId == null &&
             map.collaboratorShareId == null &&
             map.editors is list && map.editors.size() == 0;
    }

    function hasOnlyAllowedKeysChanged(allowedKeys) {
      let changedKeys = request.resource.data.diff(resource.data).affectedKeys();
      return changedKeys.hasOnly(allowedKeys);
    }
    
    function isValidEditorUpdate() {
        // Case 1: Editor is updating the grid.
        let isGridUpdate = hasOnlyAllowedKeysChanged(['gridState', 'updatedAt']);
        
        // Case 2: Editor is leaving the map.
        let isLeavingMap = request.auth.uid in resource.data.editors &&
                           request.resource.data.editors == resource.data.editors.removeAll([request.auth.uid]);
        let isLeavingMapUpdate = isLeavingMap && hasOnlyAllowedKeysChanged(['editors', 'updatedAt']);

        // An editor's update is valid if it's a grid update OR if they are leaving the map.
        return isGridUpdate || isLeavingMapUpdate;
    }

    // =================================================================
    // Collection: users
    // =================================================================
    
    match /users/{userId} {
      allow read: if isSignedIn();
      allow write: if isSignedIn() && request.auth.uid == userId;
    }

    // =================================================================
    // Collection: maps
    // =================================================================
    
    match /maps/{mapId} {
      allow read: if resource.data.isPublicViewable == true || isOwnerOrEditor(resource.data);
      allow create: if isValidNewMap();
      allow update: if isSignedIn() && (
        isOwner(resource.data) ||
        (isEditor(resource.data) && isValidEditorUpdate())
      );
      allow delete: if isOwner(resource.data);
    }
  }
}
