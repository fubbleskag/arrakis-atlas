
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth.uid != null;
    }

    // Users
    match /users/{userId} {
      allow read, update: if isSignedIn() && request.auth.uid == userId;
      allow create: if isSignedIn() && request.auth.uid == userId
                    && request.resource.data.uid == userId
                    && request.resource.data.email == request.auth.token.email
                    && (!('displayName' in request.resource.data) || request.resource.data.displayName is string)
                    && request.resource.data.lastLogin == request.time;
      // Deletion of user profiles is disallowed for simplicity
      allow delete: if false;
    }

    // Maps
    match /maps/{mapId} {
      function isMapOwner() {
        return isSignedIn() && request.auth.uid == resource.data.ownerId;
      }

      function isCollaborator() {
        // Checks if the user's UID is a key in the collaborators map
        return isSignedIn() && request.auth.uid in resource.data.collaborators.keys();
      }

      // Updated read rule
      allow read: if isSignedIn()
                  && 'memberUIDs' in resource.data // Check if memberUIDs field exists
                  && resource.data.memberUIDs is list // Check if it's a list
                  && request.auth.uid in resource.data.memberUIDs; // Check if user is in the list

      allow create: if isSignedIn()
                    && request.resource.data.ownerId == request.auth.uid
                    && request.resource.data.collaborators[request.auth.uid] == 'owner'
                    && request.resource.data.memberUIDs.hasOnly([request.auth.uid])
                    && request.resource.data.createdAt == request.time
                    && request.resource.data.updatedAt == request.time
                    && request.resource.data.name is string && request.resource.data.name.size() > 0
                    && request.resource.data.gridState is map; // Basic check for gridState

      // Simplified update: allow if user is in collaborators.
      // Add specific field immutability.
      allow update: if isSignedIn() && isCollaborator()
                    && request.resource.data.ownerId == resource.data.ownerId         // OwnerId is immutable
                    && request.resource.data.createdAt == resource.data.createdAt     // CreatedAt is immutable
                    && request.resource.data.updatedAt == request.time;               // UpdatedAt must be server timestamp

      allow delete: if isMapOwner();
    }
  }
}
